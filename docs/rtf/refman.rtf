{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Battery Meter  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 \par
}}Battery Meter}
{\comment Generated by doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Battery Meter}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Index\par \pard\plain 
{\tc \v Topic Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Topics\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all topics with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Timer Library <timer.h>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
GPIO Library <gpio.h>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TWI Library <twi.h>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
UART Library <uart.h>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b include/{\b timer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/gpio/{\b gpio.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/oled/{\b font.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/oled/{\b oled.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/twi/{\b twi.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b lib/uart/{\b uart.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Documentation{\tc \v Topic Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Timer Library <timer.h>\par \pard\plain 
{\tc\tcl2 \v Timer Library <timer.h>}
{\xe \v Timer Library <timer.h>}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer library for AVR-GCC. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definitions for 16-bit Timer/Counter1\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 16, F_CPU = 16 MHz \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_STOP}\~ TCCR1B &= ~((1<<CS12) | (1<<CS11) | (1<<CS10));{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_4MS}\~ TCCR1B &= ~((1<<CS12) | (1<<CS11)); TCCR1B |= (1<<CS10);{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_33MS}\~ TCCR1B &= ~((1<<CS12) | (1<<CS10)); TCCR1B |= (1<<CS11);{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 33ms, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_262MS}\~ TCCR1B &= ~(1<<CS12); TCCR1B |= (1<<CS11) | (1<<CS10);{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 262ms, prescaler 011 --> 64. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_1SEC}\~ TCCR1B &= ~((1<<CS11) | (1<<CS10)); TCCR1B |= (1<<CS12);{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1s, prescaler 100 --> 256. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_4SEC}\~ TCCR1B &= ~(1<<CS11); TCCR1B |= (1<<CS12) | (1<<CS10);{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4s, prescaler // 101 --> 1024. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_ENABLE}\~ TIMSK1 |= (1<<TOIE1);{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_DISABLE}\~ TIMSK1 &= ~(1<<TOIE1);{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definitions for 8-bit Timer/Counter0\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 8, F_CPU = 16 MHz \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_STOP}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS01) | (1<<CS00));{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_16US}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS01)); TCCR0B  |= (1<<CS00);{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16us, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_128US}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS00)); TCCR0B  |= (1<<CS01);{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 128us, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_1MS}\~ TCCR0B  &= ~(1<<CS02); TCCR0B  |= (1<<CS01) | (1<<CS00);{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1ms, prescaler 011 --> 64. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_4MS}\~ TCCR0B  &= ~((1<<CS01) | (1<<CS00)); TCCR0B  |= (1<<CS02);{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 100 --> 256. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_16MS}\~ TCCR0B  &= ~(1<<CS01); TCCR0B  |= (1<<CS02) | (1<<CS00);{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16ms, prescaler // 101 --> 1024. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_ENABLE}\~ TIMSK0 |= (1<<TOIE0);{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_DISABLE}\~ TIMSK0 &= ~(1<<TOIE0);{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definitions for 8-bit Timer/Counter2\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 8, F_CPU = 16 MHz \par
}}}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_STOP}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS21) | (1<<CS20));{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_16US}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS21)); TCCR2B  |= (1<<CS20);{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16us, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_128US}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS20)); TCCR2B  |= (1<<CS21);{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 128us, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_512US}\~ TCCR2B  &= ~((1<<CS22)); TCCR2B  |= (1<<CS21) | (1<<CS20);{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 512us, prescaler 011 --> 32. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_1MS}\~ TCCR2B  &= ~((1<<CS21) | (1<<CS20)); TCCR2B  |= (1<<CS22);{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1ms, prescaler 100 --> 64. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_2MS}\~ TCCR2B  &= ~((1<<CS21)); TCCR2B  |= (1<<CS22) | (1<<CS20);{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 2ms, prescaler 101 --> 128. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_4MS}\~ TCCR2B  &= ~((1<<CS20)); TCCR2B  |= (1<<CS22) | (1<<CS21);{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 110 --> 256. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_16MS}\~ TCCR2B  |= (1<<CS22) | (1<<CS21) | (1<<CS20);{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16ms, prescaler // 111 --> 1024. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_ENABLE}\~ TIMSK2 |= (1<<TOIE2);{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_DISABLE}\~ TIMSK2 &= ~(1<<TOIE2);{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer library for AVR-GCC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21 #include <timer.h>} \par
}
\par
The library contains macros for controlling the timer modules.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on Microchip Atmel ATmega328P manual and no source file is needed for the library. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tomas Fryza, Dept. of Radio Electronics, Brno University of Technology, Czechia \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
(c) 2019 Tomas Fryza, This work is licensed under the terms of the MIT license \par
}}}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GPIO Library <gpio.h>\par \pard\plain 
{\tc\tcl2 \v GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO library for AVR-GCC. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_mode_output} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one output pin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_mode_input_pullup} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one input pin and enable pull-up. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_write_low} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to low value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_write_high} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to high value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b GPIO_read} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from input pin. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GPIO library for AVR-GCC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21 #include <gpio.h>} \par
}
\par
The library contains functions for controlling AVRs' gpio pin(s).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on AVR Libc Reference Manual. Tested on ATmega328P (Arduino Uno), 16 MHz, AVR 8-bit Toolchain 3.6.2. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tomas Fryza, Dept. of Radio Electronics, Brno University of Technology, Czechia \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
(c) 2019 Tomas Fryza, This work is licensed under the terms of the MIT license \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GPIO_mode_input_pullup\:GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>\:GPIO_mode_input_pullup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GPIO_mode_input_pullup (volatile uint8_t *  {\i reg}, uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one input pin and enable pull-up. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Address of Data Direction Register, such as &DDRB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{Pin designation in the interval 0 to 7 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v GPIO_mode_output\:GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>\:GPIO_mode_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GPIO_mode_output (volatile uint8_t *  {\i reg}, uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one output pin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Address of Data Direction Register, such as &DDRB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{Pin designation in the interval 0 to 7 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v GPIO_read\:GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>\:GPIO_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t GPIO_read (volatile uint8_t *  {\i reg}, uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from input pin. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Address of Pin Register, such as &PINB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{Pin designation in the interval 0 to 7 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pin value \par
}}}}
{\xe \v GPIO_write_high\:GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>\:GPIO_write_high}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GPIO_write_high (volatile uint8_t *  {\i reg}, uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to high value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Address of Port Register, such as &PORTB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{Pin designation in the interval 0 to 7 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v GPIO_write_low\:GPIO Library <gpio.h>}
{\xe \v GPIO Library <gpio.h>\:GPIO_write_low}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GPIO_write_low (volatile uint8_t *  {\i reg}, uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to low value. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i reg} \cell }{Address of Port Register, such as &PORTB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{Pin designation in the interval 0 to 7 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TWI Library <twi.h>\par \pard\plain 
{\tc\tcl2 \v TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C/TWI library for AVR-GCC. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Other definitions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize TWI unit, enable internal pull-ups, and set SCL frequency. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_start} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start communication on I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_write} (uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send one byte to I2C/TWI Slave device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_read} (uint8_t ack)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read one byte from I2C/TWI Slave device and acknowledge it by ACK or NACK. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_stop} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates Stop condition on I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_test_address} (uint8_t adr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test presence of one I2C device on the bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_WRITE}\~ 0{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode for writing to I2C/TWI device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_READ}\~ 1{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode for reading from I2C/TWI device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_ACK}\~ 0{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACK value for writing to I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_NACK}\~ 1{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NACK value for writing to I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DDR}(_x)\~ (*(&_x - 1)){\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of Data Direction Register of port _x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIN}(_x)\~ (*(&_x - 2)){\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of input register of port _x. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definition of frequencies\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b F_CPU}\~ 16000000{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPU frequency in Hz required TWI_BIT_RATE_REG. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b F_SCL}\~ 100000{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C/TWI bit rate. Must be greater than 31000. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_BIT_RATE_REG}\~ (({\b F_CPU}/{\b F_SCL} - 16) / 2){\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TWI bit rate register value. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definition of ports and pins\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_PORT}\~ PORTC{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port of TWI unit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_SDA_PIN}\~ 4{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDA pin of TWI unit. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_SCL_PIN}\~ 5{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SCL pin of TWI unit. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C/TWI library for AVR-GCC. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21 #include <twi.h>} \par
}
\par
This library defines functions for the TWI (I2C) communication between AVR and Slave device(s). Functions use internal TWI module of AVR.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Only Master transmitting and Master receiving modes are implemented. Based on Microchip Atmel ATmega16 and ATmega328P manuals. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tomas Fryza, Dept. of Radio Electronics, Brno University of Technology, Czechia \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
(c) 2018 Tomas Fryza, This work is licensed under the terms of the MIT license \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v twi_init\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void twi_init (void )}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize TWI unit, enable internal pull-ups, and set SCL frequency. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Implementation notes:\par
}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AVR internal pull-up resistors at pins TWI_SDA_PIN and TWI_SCL_PIN are enabled\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TWI bit rate register value is calculated as follows fscl = fcpu/(16 + 2*TWBR) \par}
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v twi_read\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t twi_read (uint8_t  {\i ack})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read one byte from I2C/TWI Slave device and acknowledge it by ACK or NACK. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ack} \cell }{- ACK/NACK value to be transmitted \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Received data byte \par
}}}}
{\xe \v twi_start\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void twi_start (void )}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start communication on I2C/TWI bus. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v twi_stop\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void twi_stop (void )}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates Stop condition on I2C/TWI bus. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v twi_test_address\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_test_address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t twi_test_address (uint8_t  {\i adr})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test presence of one I2C device on the bus. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i adr} \cell }{Slave address \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
ACK/NACK received value \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i 0} \cell }{- ACK has been received \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i 1} \cell }{- NACK has been received \cell }
{\row }
}
}}
{\xe \v twi_write\:TWI Library <twi.h>}
{\xe \v TWI Library <twi.h>\:twi_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t twi_write (uint8_t  {\i data})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send one byte to I2C/TWI Slave device. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{Byte to be transmitted \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
ACK/NACK received value \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Return values\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i 0} \cell }{- ACK has been received \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i 1} \cell }{- NACK has been received \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Function returns 0 if 0x18, 0x28, or 0x40 status code is detected\par
 0x18: SLA+W has been transmitted and ACK has been received\par
 0x28: Data byte has been transmitted and ACK has been received\par
 0x40: SLA+R has been transmitted and ACK has been received\par
}}}}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UART Library <uart.h>\par \pard\plain 
{\tc\tcl2 \v UART Library <uart.h>}
{\xe \v UART Library <uart.h>}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt UART library using the built-in UART with transmit and receive circular buffers. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BAUD_SELECT}(baudRate,  xtalCpu)\~ (((xtalCpu) + 8UL * (baudRate)) / (16UL * (baudRate)) -1UL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BAUD_SELECT_DOUBLE_SPEED}(baudRate,  xtalCpu)\~ ( ((((xtalCpu) + 4UL * (baudRate)) / (8UL * (baudRate)) -1UL)) | 0x8000)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression for ATmega double speed mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_RX_BUFFER_SIZE}\~ 32\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular receive buffer, must be power of 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_TX_BUFFER_SIZE}\~ 32\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular transmit buffer, must be power of 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_FRAME_ERROR}\~ 0x1000{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Framing Error by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_OVERRUN_ERROR}\~ 0x0800{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrun condition by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_PARITY_ERROR}\~ 0x0400{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity Error by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_BUFFER_OVERFLOW}\~ 0x0200{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
receive ringbuffer overflow }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_NO_DATA}\~ 0x0100{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no receive data available \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b uart_puts_P}(__s)\~ {\b uart_puts_p}(PSTR(__s)){\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to automatically put a string constant into program memory. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b uart1_puts_P}(__s)\~ {\b uart1_puts_p}(PSTR(__s)){\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to automatically put a string constant into program memory. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_init} (unsigned int baudrate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize UART and set baudrate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b uart_getc} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte from ringbuffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_putc} (unsigned char data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_puts} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_puts_p} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_init} (unsigned int baudrate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize USART1 (only available on selected ATmegas) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b uart1_getc} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte of USART1 from ringbuffer. (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_putc} (unsigned char data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_puts} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_puts_p} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt UART library using the built-in UART with transmit and receive circular buffers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21 #include <uart.h>} \par
}
\par
This library can be used to transmit and receive data through the built in UART.\par
An interrupt is generated when the UART has finished transmitting or receiving a byte. The interrupt handling routines use circular buffers for buffering received and transmitted data.\par
The UART_RX_BUFFER_SIZE and UART_TX_BUFFER_SIZE constants define the size of the circular buffers in bytes. Note that these constants must be a power of 2. You may need to adapt these constants to your target and your application by adding CDEFS += -DUART_RX_BUFFER_SIZE=nn -DUART_TX_BUFFER_SIZE=nn to your Makefile.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on Atmel Application Note AVR306 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Peter Fleury {\f2 pfleury@gmx.ch} {\f2 http://tinyurl.com/peterfleury} \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
(C) 2015 Peter Fleury, GNU General Public License Version 3 \par
}}}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v UART_BAUD_SELECT\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:UART_BAUD_SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_BAUD_SELECT( baudRate,  xtalCpu)\~ (((xtalCpu) + 8UL * (baudRate)) / (16UL * (baudRate)) -1UL)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xtalCpu} \cell }{system clock in Mhz, e.g. 4000000UL for 4Mhz \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baudRate} \cell }{baudrate in bps, e.g. 1200, 2400, 9600 \par
 \cell }
{\row }
}
}}
{\xe \v UART_BAUD_SELECT_DOUBLE_SPEED\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:UART_BAUD_SELECT_DOUBLE_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_BAUD_SELECT_DOUBLE_SPEED( baudRate,  xtalCpu)\~ ( ((((xtalCpu) + 4UL * (baudRate)) / (8UL * (baudRate)) -1UL)) | 0x8000)}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression for ATmega double speed mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xtalCpu} \cell }{system clock in Mhz, e.g. 4000000UL for 4Mhz \par
 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baudRate} \cell }{baudrate in bps, e.g. 1200, 2400, 9600 \par
 \cell }
{\row }
}
}}
{\xe \v UART_RX_BUFFER_SIZE\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:UART_RX_BUFFER_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_RX_BUFFER_SIZE\~ 32}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular receive buffer, must be power of 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You may need to adapt this constant to your target and your application by adding CDEFS += -DUART_RX_BUFFER_SIZE=nn to your Makefile. \par
}}
{\xe \v UART_TX_BUFFER_SIZE\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:UART_TX_BUFFER_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_TX_BUFFER_SIZE\~ 32}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular transmit buffer, must be power of 2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
You may need to adapt this constant to your target and your application by adding CDEFS += -DUART_TX_BUFFER_SIZE=nn to your Makefile. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v uart1_getc\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart1_getc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int uart1_getc (void ){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte of USART1 from ringbuffer. (only available on selected ATmega) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_getc} \par
}}}}
{\xe \v uart1_init\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart1_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart1_init (unsigned int  {\i baudrate}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize USART1 (only available on selected ATmegas) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_init} \par
}}}}
{\xe \v uart1_putc\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart1_putc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart1_putc (unsigned char  {\i data}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via USART1 (only available on selected ATmega) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_putc} \par
}}}}
{\xe \v uart1_puts\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart1_puts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart1_puts (const char *  {\i s}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via USART1 (only available on selected ATmega) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_puts} \par
}}}}
{\xe \v uart1_puts_p\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart1_puts_p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart1_puts_p (const char *  {\i s}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via USART1 (only available on selected ATmega) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_puts_p} \par
}}}}
{\xe \v uart_getc\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart_getc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int uart_getc (void ){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte from ringbuffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns in the lower byte the received character and in the higher byte the last receive error. UART_NO_DATA is returned when no data is available.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
lower byte: received byte from ringbuffer \par
higher byte: last receive status{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b 0}  successfully received data from UART\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UART_NO_DATA}  \par
 \par
no receive data available\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UART_BUFFER_OVERFLOW}  \par
 \par
Receive ringbuffer overflow. We are not reading the receive buffer fast enough, one or more received character have been dropped\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UART_OVERRUN_ERROR}  \par
 \par
Overrun condition by UART. A character already present in the UART UDR register was not read by the interrupt handler before the next character arrived, one or more received characters have been dropped.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UART_FRAME_ERROR}  \par
 \par
Framing Error by UART \par}
}}}}
{\xe \v uart_init\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_init (unsigned int  {\i baudrate}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize UART and set baudrate. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baudrate} \cell }{Specify baudrate using macro {\b UART_BAUD_SELECT()} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v uart_putc\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart_putc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_putc (unsigned char  {\i data}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{byte to be transmitted \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v uart_puts\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart_puts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_puts (const char *  {\i s}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The string is buffered by the uart library in a circular buffer and one character at a time is transmitted to the UART using interrupts. Blocks if it can not write the whole string into the circular buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{string to be transmitted \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}}}
{\xe \v uart_puts_p\:UART Library <uart.h>}
{\xe \v UART Library <uart.h>\:uart_puts_p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_puts_p (const char *  {\i s}){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via UART. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The string is buffered by the uart library in a circular buffer and one character at a time is transmitted to the UART using interrupts. Blocks if it can not write the whole string into the circular buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{program memory string to be transmitted \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
none \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_puts_P} \par
}}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
include/timer.h File Reference\par \pard\plain 
{\tc\tcl2 \v include/timer.h}
{\xe \v include/timer.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/io.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Definitions for 16-bit Timer/Counter1\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 16, F_CPU = 16 MHz \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_STOP}\~ TCCR1B &= ~((1<<CS12) | (1<<CS11) | (1<<CS10));\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_4MS}\~ TCCR1B &= ~((1<<CS12) | (1<<CS11)); TCCR1B |= (1<<CS10);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_33MS}\~ TCCR1B &= ~((1<<CS12) | (1<<CS10)); TCCR1B |= (1<<CS11);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 33ms, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_262MS}\~ TCCR1B &= ~(1<<CS12); TCCR1B |= (1<<CS11) | (1<<CS10);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 262ms, prescaler 011 --> 64. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_1SEC}\~ TCCR1B &= ~((1<<CS11) | (1<<CS10)); TCCR1B |= (1<<CS12);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1s, prescaler 100 --> 256. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_4SEC}\~ TCCR1B &= ~(1<<CS11); TCCR1B |= (1<<CS12) | (1<<CS10);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4s, prescaler // 101 --> 1024. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_ENABLE}\~ TIMSK1 |= (1<<TOIE1);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM1_OVF_DISABLE}\~ TIMSK1 &= ~(1<<TOIE1);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Definitions for 8-bit Timer/Counter0\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 8, F_CPU = 16 MHz \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_STOP}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS01) | (1<<CS00));\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_16US}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS01)); TCCR0B  |= (1<<CS00);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16us, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_128US}\~ TCCR0B  &= ~((1<<CS02) | (1<<CS00)); TCCR0B  |= (1<<CS01);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 128us, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_1MS}\~ TCCR0B  &= ~(1<<CS02); TCCR0B  |= (1<<CS01) | (1<<CS00);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1ms, prescaler 011 --> 64. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_4MS}\~ TCCR0B  &= ~((1<<CS01) | (1<<CS00)); TCCR0B  |= (1<<CS02);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 100 --> 256. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_16MS}\~ TCCR0B  &= ~(1<<CS01); TCCR0B  |= (1<<CS02) | (1<<CS00);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16ms, prescaler // 101 --> 1024. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_ENABLE}\~ TIMSK0 |= (1<<TOIE0);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM0_OVF_DISABLE}\~ TIMSK0 &= ~(1<<TOIE0);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Definitions for 8-bit Timer/Counter2\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t_OVF = 1/F_CPU * prescaler * 2^n where n = 8, F_CPU = 16 MHz \par
}}}}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_STOP}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS21) | (1<<CS20));\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop timer, prescaler 000 --> STOP. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_16US}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS21)); TCCR2B  |= (1<<CS20);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16us, prescaler 001 --> 1. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_128US}\~ TCCR2B  &= ~((1<<CS22) | (1<<CS20)); TCCR2B  |= (1<<CS21);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 128us, prescaler 010 --> 8. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_512US}\~ TCCR2B  &= ~((1<<CS22)); TCCR2B  |= (1<<CS21) | (1<<CS20);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 512us, prescaler 011 --> 32. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_1MS}\~ TCCR2B  &= ~((1<<CS21) | (1<<CS20)); TCCR2B  |= (1<<CS22);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 1ms, prescaler 100 --> 64. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_2MS}\~ TCCR2B  &= ~((1<<CS21)); TCCR2B  |= (1<<CS22) | (1<<CS20);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 2ms, prescaler 101 --> 128. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_4MS}\~ TCCR2B  &= ~((1<<CS20)); TCCR2B  |= (1<<CS22) | (1<<CS21);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 4ms, prescaler 110 --> 256. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_16MS}\~ TCCR2B  |= (1<<CS22) | (1<<CS21) | (1<<CS20);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set overflow 16ms, prescaler // 111 --> 1024. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_ENABLE}\~ TIMSK2 |= (1<<TOIE2);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable overflow interrupt, 1 --> enable. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TIM2_OVF_DISABLE}\~ TIMSK2 &= ~(1<<TOIE2);\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable overflow interrupt, 0 --> disable. }{
}\par
}\par}
}
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
timer.h\par \pard\plain 
{\tc\tcl2 \v include/timer.h}
{\xe \v include/timer.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TIMER_H}\par
2 {\cf21 # define TIMER_H}\par
3 \par
4 {\cf20 /***********************************************************************}\par
5 {\cf20  * }\par
6 {\cf20  * Timer library for AVR-GCC.}\par
7 {\cf20  * }\par
8 {\cf20  * ATmega328P (Arduino Uno), 16 MHz, PlatformIO}\par
9 {\cf20  *}\par
10 {\cf20  * Copyright (c) 2019 Tomas Fryza}\par
11 {\cf20  * Dept. of Radio Electronics, Brno University of Technology, Czechia}\par
12 {\cf20  * This work is licensed under the terms of the MIT license.}\par
13 {\cf20  *}\par
14 {\cf20  **********************************************************************/}\par
15 \par
35 {\cf20 /* Includes ----------------------------------------------------------*/}\par
36 {\cf21 #include <avr/io.h>}\par
37 \par
38 \par
39 {\cf20 /* Defines -----------------------------------------------------------*/}\par
45 {\cf21 #define TIM1_STOP      TCCR1B &= ~((1<<CS12) | (1<<CS11) | (1<<CS10));}\par
47 {\cf21 #define TIM1_OVF_4MS   TCCR1B &= ~((1<<CS12) | (1<<CS11)); TCCR1B |= (1<<CS10);}\par
49 {\cf21 #define TIM1_OVF_33MS  TCCR1B &= ~((1<<CS12) | (1<<CS10)); TCCR1B |= (1<<CS11);}\par
51 {\cf21 #define TIM1_OVF_262MS TCCR1B &= ~(1<<CS12); TCCR1B |= (1<<CS11) | (1<<CS10);}\par
53 {\cf21 #define TIM1_OVF_1SEC  TCCR1B &= ~((1<<CS11) | (1<<CS10)); TCCR1B |= (1<<CS12);}\par
55 {\cf21 #define TIM1_OVF_4SEC  TCCR1B &= ~(1<<CS11); TCCR1B |= (1<<CS12) | (1<<CS10);}\par
56 \par
58 {\cf21 #define TIM1_OVF_ENABLE  TIMSK1 |= (1<<TOIE1);}\par
60 {\cf21 #define TIM1_OVF_DISABLE TIMSK1 &= ~(1<<TOIE1);}\par
61 \par
62 \par
68 {\cf21 #define TIM0_STOP      TCCR0B  &= ~((1<<CS02) | (1<<CS01) | (1<<CS00));}\par
70 {\cf21 #define TIM0_OVF_16US   TCCR0B  &= ~((1<<CS02) | (1<<CS01)); TCCR0B  |= (1<<CS00);}\par
72 {\cf21 #define TIM0_OVF_128US  TCCR0B  &= ~((1<<CS02) | (1<<CS00)); TCCR0B  |= (1<<CS01);}\par
74 {\cf21 #define TIM0_OVF_1MS TCCR0B  &= ~(1<<CS02); TCCR0B  |= (1<<CS01) | (1<<CS00);}\par
76 {\cf21 #define TIM0_OVF_4MS  TCCR0B  &= ~((1<<CS01) | (1<<CS00)); TCCR0B  |= (1<<CS02);}\par
78 {\cf21 #define TIM0_OVF_16MS  TCCR0B  &= ~(1<<CS01); TCCR0B  |= (1<<CS02) | (1<<CS00);}\par
79 \par
81 {\cf21 #define TIM0_OVF_ENABLE  TIMSK0 |= (1<<TOIE0);}\par
83 {\cf21 #define TIM0_OVF_DISABLE TIMSK0 &= ~(1<<TOIE0);}\par
84 \par
85 \par
91 {\cf21 #define TIM2_STOP      TCCR2B  &= ~((1<<CS22) | (1<<CS21) | (1<<CS20));}\par
93 {\cf21 #define TIM2_OVF_16US   TCCR2B  &= ~((1<<CS22) | (1<<CS21)); TCCR2B  |= (1<<CS20);}\par
95 {\cf21 #define TIM2_OVF_128US  TCCR2B  &= ~((1<<CS22) | (1<<CS20)); TCCR2B  |= (1<<CS21);}\par
97 {\cf21 #define TIM2_OVF_512US  TCCR2B  &= ~((1<<CS22)); TCCR2B  |= (1<<CS21) | (1<<CS20);}\par
99 {\cf21 #define TIM2_OVF_1MS TCCR2B  &= ~((1<<CS21) | (1<<CS20)); TCCR2B  |= (1<<CS22);}\par
101 {\cf21 #define TIM2_OVF_2MS TCCR2B  &= ~((1<<CS21)); TCCR2B  |= (1<<CS22) | (1<<CS20);}\par
103 {\cf21 #define TIM2_OVF_4MS  TCCR2B  &= ~((1<<CS20)); TCCR2B  |= (1<<CS22) | (1<<CS21);}\par
105 {\cf21 #define TIM2_OVF_16MS  TCCR2B  |= (1<<CS22) | (1<<CS21) | (1<<CS20);}\par
106 \par
108 {\cf21 #define TIM2_OVF_ENABLE  TIMSK2 |= (1<<TOIE2);}\par
110 {\cf21 #define TIM2_OVF_DISABLE TIMSK2 &= ~(1<<TOIE2);}\par
111 \par
112 \par
115 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/gpio/gpio.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/gpio/gpio.h}
{\xe \v lib/gpio/gpio.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/io.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_mode_output} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one output pin. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_mode_input_pullup} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure one input pin and enable pull-up. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_write_low} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to low value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GPIO_write_high} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one pin to high value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b GPIO_read} (volatile uint8_t *reg, uint8_t pin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from input pin. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio.h\par \pard\plain 
{\tc\tcl2 \v lib/gpio/gpio.h}
{\xe \v lib/gpio/gpio.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef GPIO_H}\par
2 {\cf21 # define GPIO_H}\par
3 \par
4 {\cf20 /***********************************************************************}\par
5 {\cf20  * }\par
6 {\cf20  * GPIO library for AVR-GCC.}\par
7 {\cf20  * }\par
8 {\cf20  * ATmega328P (Arduino Uno), 16 MHz, PlatformIO}\par
9 {\cf20  *}\par
10 {\cf20  * Copyright (c) 2019 Tomas Fryza}\par
11 {\cf20  * Dept. of Radio Electronics, Brno University of Technology, Czechia}\par
12 {\cf20  * This work is licensed under the terms of the MIT license.}\par
13 {\cf20  *}\par
14 {\cf20  **********************************************************************/}\par
15 \par
35 {\cf20 /* Includes ----------------------------------------------------------*/}\par
36 {\cf21 #include <avr/io.h>}\par
37 \par
38 \par
39 {\cf20 /* Function prototypes -----------------------------------------------*/}\par
46 {\cf18 void} GPIO_mode_output({\cf17 volatile} uint8_t *reg, uint8_t pin);\par
47 \par
48 \par
55 {\cf18 void} GPIO_mode_input_pullup({\cf17 volatile} uint8_t *reg, uint8_t pin);\par
56 \par
57 \par
64 {\cf18 void} GPIO_write_low({\cf17 volatile} uint8_t *reg, uint8_t pin);\par
65 \par
66 \par
73 {\cf18 void} GPIO_write_high({\cf17 volatile} uint8_t *reg, uint8_t pin);\par
74 \par
75 \par
82 uint8_t GPIO_read({\cf17 volatile} uint8_t *reg, uint8_t pin);\par
83 \par
84 \par
85 {\cf20 /* GPIO_config_input_nopull */}\par
86 \par
87 \par
88 {\cf20 /* GPIO_toggle */}\par
89 \par
90 \par
93 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
font.h\par \pard\plain 
{\tc\tcl2 \v lib/oled/font.h}
{\xe \v lib/oled/font.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf20 /*}\par
3 {\cf20  *  font.h}\par
4 {\cf20  *}\par
5 {\cf20  *  Created by Michael K\'F6hler on 13.09.18.}\par
6 {\cf20  *  Copyright 2018 Skie-Systems. All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  */}\par
9 {\cf21 #ifndef _font_h_}\par
10 {\cf21 # define _font_h_}\par
11 {\cf21 # include <avr/pgmspace.h>}\par
12 \par
13 {\cf20 // extern const char ssd1306oled_font[][6] PROGMEM;}\par
14 {\cf20 // extern const char special_char[][2] PROGMEM;}\par
15 \par
16 {\cf17 const} {\cf18 char} ssd1306oled_font[][6] PROGMEM = \{\par
17     \{0x00, 0x00, 0x00, 0x00, 0x00, 0x00\}, {\cf20 // sp}\par
18     \{0x00, 0x00, 0x00, 0x2f, 0x00, 0x00\}, {\cf20 // !}\par
19     \{0x00, 0x00, 0x07, 0x00, 0x07, 0x00\}, {\cf20 // "}\par
20     \{0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14\}, {\cf20 // #}\par
21     \{0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12\}, {\cf20 // $}\par
22     \{0x00, 0x62, 0x64, 0x08, 0x13, 0x23\}, {\cf20 // %}\par
23     \{0x00, 0x36, 0x49, 0x55, 0x22, 0x50\}, {\cf20 // &}\par
24     \{0x00, 0x00, 0x05, 0x03, 0x00, 0x00\}, {\cf20 // '}\par
25     \{0x00, 0x00, 0x1c, 0x22, 0x41, 0x00\}, {\cf20 // (}\par
26     \{0x00, 0x00, 0x41, 0x22, 0x1c, 0x00\}, {\cf20 // )}\par
27     \{0x00, 0x14, 0x08, 0x3E, 0x08, 0x14\}, {\cf20 // *}\par
28     \{0x00, 0x08, 0x08, 0x3E, 0x08, 0x08\}, {\cf20 // +}\par
29     \{0x00, 0x00, 0x00, 0xA0, 0x60, 0x00\}, {\cf20 // ,}\par
30     \{0x00, 0x08, 0x08, 0x08, 0x08, 0x08\}, {\cf20 // -}\par
31     \{0x00, 0x00, 0x60, 0x60, 0x00, 0x00\}, {\cf20 // .}\par
32     \{0x00, 0x20, 0x10, 0x08, 0x04, 0x02\}, {\cf20 // /}\par
33     \{0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E\}, {\cf20 // 0}\par
34     \{0x00, 0x00, 0x42, 0x7F, 0x40, 0x00\}, {\cf20 // 1}\par
35     \{0x00, 0x42, 0x61, 0x51, 0x49, 0x46\}, {\cf20 // 2}\par
36     \{0x00, 0x21, 0x41, 0x45, 0x4B, 0x31\}, {\cf20 // 3}\par
37     \{0x00, 0x18, 0x14, 0x12, 0x7F, 0x10\}, {\cf20 // 4}\par
38     \{0x00, 0x27, 0x45, 0x45, 0x45, 0x39\}, {\cf20 // 5}\par
39     \{0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30\}, {\cf20 // 6}\par
40     \{0x00, 0x01, 0x71, 0x09, 0x05, 0x03\}, {\cf20 // 7}\par
41     \{0x00, 0x36, 0x49, 0x49, 0x49, 0x36\}, {\cf20 // 8}\par
42     \{0x00, 0x06, 0x49, 0x49, 0x29, 0x1E\}, {\cf20 // 9}\par
43     \{0x00, 0x00, 0x36, 0x36, 0x00, 0x00\}, {\cf20 // :}\par
44     \{0x00, 0x00, 0x56, 0x36, 0x00, 0x00\}, {\cf20 // ;}\par
45     \{0x00, 0x08, 0x14, 0x22, 0x41, 0x00\}, {\cf20 // <}\par
46     \{0x00, 0x14, 0x14, 0x14, 0x14, 0x14\}, {\cf20 // =}\par
47     \{0x00, 0x00, 0x41, 0x22, 0x14, 0x08\}, {\cf20 // >}\par
48     \{0x00, 0x02, 0x01, 0x51, 0x09, 0x06\}, {\cf20 // ?}\par
49     \{0x00, 0x32, 0x49, 0x59, 0x51, 0x3E\}, {\cf20 // @}\par
50     \{0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C\}, {\cf20 // A}\par
51     \{0x00, 0x7F, 0x49, 0x49, 0x49, 0x36\}, {\cf20 // B}\par
52     \{0x00, 0x3E, 0x41, 0x41, 0x41, 0x22\}, {\cf20 // C}\par
53     \{0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C\}, {\cf20 // D}\par
54     \{0x00, 0x7F, 0x49, 0x49, 0x49, 0x41\}, {\cf20 // E}\par
55     \{0x00, 0x7F, 0x09, 0x09, 0x09, 0x01\}, {\cf20 // F}\par
56     \{0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A\}, {\cf20 // G}\par
57     \{0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F\}, {\cf20 // H}\par
58     \{0x00, 0x00, 0x41, 0x7F, 0x41, 0x00\}, {\cf20 // I}\par
59     \{0x00, 0x20, 0x40, 0x41, 0x3F, 0x01\}, {\cf20 // J}\par
60     \{0x00, 0x7F, 0x08, 0x14, 0x22, 0x41\}, {\cf20 // K}\par
61     \{0x00, 0x7F, 0x40, 0x40, 0x40, 0x40\}, {\cf20 // L}\par
62     \{0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F\}, {\cf20 // M}\par
63     \{0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F\}, {\cf20 // N}\par
64     \{0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E\}, {\cf20 // O}\par
65     \{0x00, 0x7F, 0x09, 0x09, 0x09, 0x06\}, {\cf20 // P}\par
66     \{0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E\}, {\cf20 // Q}\par
67     \{0x00, 0x7F, 0x09, 0x19, 0x29, 0x46\}, {\cf20 // R}\par
68     \{0x00, 0x46, 0x49, 0x49, 0x49, 0x31\}, {\cf20 // S}\par
69     \{0x00, 0x01, 0x01, 0x7F, 0x01, 0x01\}, {\cf20 // T}\par
70     \{0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F\}, {\cf20 // U}\par
71     \{0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F\}, {\cf20 // V}\par
72     \{0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F\}, {\cf20 // W}\par
73     \{0x00, 0x63, 0x14, 0x08, 0x14, 0x63\}, {\cf20 // X}\par
74     \{0x00, 0x07, 0x08, 0x70, 0x08, 0x07\}, {\cf20 // Y}\par
75     \{0x00, 0x61, 0x51, 0x49, 0x45, 0x43\}, {\cf20 // Z}\par
76     \{0x00, 0x00, 0x7F, 0x41, 0x41, 0x00\}, {\cf20 // [}\par
77     \{0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55\}, {\cf20 // backslash}\par
78     \{0x00, 0x00, 0x41, 0x41, 0x7F, 0x00\}, {\cf20 // ]}\par
79     \{0x00, 0x04, 0x02, 0x01, 0x02, 0x04\}, {\cf20 // ^}\par
80     \{0x00, 0x40, 0x40, 0x40, 0x40, 0x40\}, {\cf20 // _}\par
81     \{0x00, 0x00, 0x01, 0x02, 0x04, 0x00\}, {\cf20 // '}\par
82     \{0x00, 0x20, 0x54, 0x54, 0x54, 0x78\}, {\cf20 // a}\par
83     \{0x00, 0x7F, 0x48, 0x44, 0x44, 0x38\}, {\cf20 // b}\par
84     \{0x00, 0x38, 0x44, 0x44, 0x44, 0x20\}, {\cf20 // c}\par
85     \{0x00, 0x38, 0x44, 0x44, 0x48, 0x7F\}, {\cf20 // d}\par
86     \{0x00, 0x38, 0x54, 0x54, 0x54, 0x18\}, {\cf20 // e}\par
87     \{0x00, 0x08, 0x7E, 0x09, 0x01, 0x02\}, {\cf20 // f}\par
88     \{0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C\}, {\cf20 // g}\par
89     \{0x00, 0x7F, 0x08, 0x04, 0x04, 0x78\}, {\cf20 // h}\par
90     \{0x00, 0x00, 0x44, 0x7D, 0x40, 0x00\}, {\cf20 // i}\par
91     \{0x00, 0x40, 0x80, 0x84, 0x7D, 0x00\}, {\cf20 // j}\par
92     \{0x00, 0x7F, 0x10, 0x28, 0x44, 0x00\}, {\cf20 // k}\par
93     \{0x00, 0x00, 0x41, 0x7F, 0x40, 0x00\}, {\cf20 // l}\par
94     \{0x00, 0x7C, 0x04, 0x18, 0x04, 0x78\}, {\cf20 // m}\par
95     \{0x00, 0x7C, 0x08, 0x04, 0x04, 0x78\}, {\cf20 // n}\par
96     \{0x00, 0x38, 0x44, 0x44, 0x44, 0x38\}, {\cf20 // o}\par
97     \{0x00, 0xFC, 0x24, 0x24, 0x24, 0x18\}, {\cf20 // p}\par
98     \{0x00, 0x18, 0x24, 0x24, 0x18, 0xFC\}, {\cf20 // q}\par
99     \{0x00, 0x7C, 0x08, 0x04, 0x04, 0x08\}, {\cf20 // r}\par
100     \{0x00, 0x48, 0x54, 0x54, 0x54, 0x20\}, {\cf20 // s}\par
101     \{0x00, 0x04, 0x3F, 0x44, 0x40, 0x20\}, {\cf20 // t}\par
102     \{0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C\}, {\cf20 // u}\par
103     \{0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C\}, {\cf20 // v}\par
104     \{0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C\}, {\cf20 // w}\par
105     \{0x00, 0x44, 0x28, 0x10, 0x28, 0x44\}, {\cf20 // x}\par
106     \{0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C\}, {\cf20 // y}\par
107     \{0x00, 0x44, 0x64, 0x54, 0x4C, 0x44\}, {\cf20 // z}\par
108     \{0x00, 0x00, 0x08, 0x77, 0x41, 0x00\}, {\cf20 // \{}\par
109     \{0x00, 0x00, 0x00, 0x63, 0x00, 0x00\}, {\cf20 // \'A6}\par
110     \{0x00, 0x00, 0x41, 0x77, 0x08, 0x00\}, {\cf20 // \}}\par
111     \{0x00, 0x08, 0x04, 0x08, 0x08, 0x04\}, {\cf20 // ~}\par
112     {\cf20 /* end of normal char-set */}\par
113     {\cf20 /* put your own signs/chars here, edit special_char too */}\par
114     {\cf20 /* be sure that your first special char stand here */}\par
115     \{0x00, 0x3A, 0x40, 0x40, 0x20, 0x7A\}, {\cf20 // \'FC, !!! Important: this must be special_char[0] !!!}\par
116     \{0x00, 0x3D, 0x40, 0x40, 0x40, 0x3D\}, {\cf20 // \'DC}\par
117     \{0x00, 0x21, 0x54, 0x54, 0x54, 0x79\}, {\cf20 // \'E4}\par
118     \{0x00, 0x7D, 0x12, 0x11, 0x12, 0x7D\}, {\cf20 // \'C4}\par
119     \{0x00, 0x39, 0x44, 0x44, 0x44, 0x39\}, {\cf20 // \'F6}\par
120     \{0x00, 0x3D, 0x42, 0x42, 0x42, 0x3D\}, {\cf20 // \'D6}\par
121     \{0x00, 0x02, 0x05, 0x02, 0x00, 0x00\}, {\cf20 // \'B0}\par
122     \{0x00, 0x7E, 0x01, 0x49, 0x55, 0x73\}, {\cf20 // \'DF}\par
123     \{0x00, 0x7C, 0x10, 0x10, 0x08, 0x1C\}, {\cf20 // \'B5}\par
124     \{0x00, 0x30, 0x48, 0x20, 0x48, 0x30\}, {\cf20 // \'CF\'89}\par
125     \{0x00, 0x5C, 0x62, 0x02, 0x62, 0x5C\} {\cf20 // \'CE\'A9}\par
126 \};\par
127 \par
128 {\cf17 const} {\cf18 char} special_char[][2] PROGMEM = \{\par
129     {\cf20 // define position of special char in font}\par
130     {\cf20 // \{special char, position in font\}}\par
131     {\cf20 // be sure that last element of this}\par
132     {\cf20 // array are \{0xff, 0xff\} and first element}\par
133     {\cf20 // are \{first special char, first element after normal char-set in font\}}\par
134     \{{\cf22 '\'FC'}, 95\},  {\cf20 // special_char[0]}\par
135     \{{\cf22 '\'DC'}, 96\},\par
136     \{{\cf22 '\'E4'}, 97\},\par
137     \{{\cf22 '\'C4'}, 98\},\par
138     \{{\cf22 '\'F6'}, 99\},\par
139     \{{\cf22 '\'D6'}, 100\},\par
140     \{{\cf22 '\'B0'}, 101\},\par
141     \{{\cf22 '\'DF'}, 102\},\par
142     \{{\cf22 '\'B5'}, 103\},\par
143     \{{\cf22 '\'CF\'89'}, 104\},\par
144     \{{\cf22 '\'CE\'A9'}, 105\},\par
145     \{0xff, 0xff\} {\cf20 // end of table special_char}\par
146 \};\par
147 \par
148 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
oled.h\par \pard\plain 
{\tc\tcl2 \v lib/oled/oled.h}
{\xe \v lib/oled/oled.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * This file is part of lcd library for ssd1306/ssd1309/sh1106 oled-display.}\par
3 {\cf20  *}\par
4 {\cf20  * lcd library for ssd1306/ssd1309/sh1106 oled-display is free software: you can redistribute it and/or modify}\par
5 {\cf20  * it under the terms of the GNU General Public License as published by}\par
6 {\cf20  * the Free Software Foundation, either version 3 of the License, or any later version.}\par
7 {\cf20  *}\par
8 {\cf20  * lcd library for ssd1306/ssd1309/sh1106 oled-display is distributed in the hope that it will be useful,}\par
9 {\cf20  * but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
10 {\cf20  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the}\par
11 {\cf20  * GNU General Public License for more details.}\par
12 {\cf20  *}\par
13 {\cf20  * You should have received a copy of the GNU General Public License}\par
14 {\cf20  * along with Foobar.  If not, see <http://www.gnu.org/licenses/>.}\par
15 {\cf20  *}\par
16 {\cf20  * Diese Datei ist Teil von lcd library for ssd1306/ssd1309/sh1106 oled-display.}\par
17 {\cf20  *}\par
18 {\cf20  * lcd library for ssd1306/ssd1309/sh1106 oled-display ist Freie Software: Sie k\'F6nnen es unter den Bedingungen}\par
19 {\cf20  * der GNU General Public License, wie von der Free Software Foundation,}\par
20 {\cf20  * Version 3 der Lizenz oder jeder sp\'E4teren}\par
21 {\cf20  * ver\'F6ffentlichten Version, weiterverbreiten und/oder modifizieren.}\par
22 {\cf20  *}\par
23 {\cf20  * lcd library for ssd1306/ssd1309/sh1106 oled-display wird in der Hoffnung, dass es n\'FCtzlich sein wird, aber}\par
24 {\cf20  * OHNE JEDE GEW\'C4HRLEISTUNG, bereitgestellt; sogar ohne die implizite}\par
25 {\cf20  * Gew\'E4hrleistung der MARKTF\'C4HIGKEIT oder EIGNUNG F\'DCR EINEN BESTIMMTEN ZWECK.}\par
26 {\cf20  * Siehe die GNU General Public License f\'FCr weitere Details.}\par
27 {\cf20  *}\par
28 {\cf20  * Sie sollten eine Kopie der GNU General Public License zusammen mit diesem}\par
29 {\cf20  * Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.}\par
30 {\cf20  *}\par
31 {\cf20  *  lcd.h}\par
32 {\cf20  *}\par
33 {\cf20  *  Created by Michael K\'F6hler on 22.12.16.}\par
34 {\cf20  *  Copyright 2016 Skie-Systems. All rights reserved.}\par
35 {\cf20  *}\par
36 {\cf20  *  lib for OLED-Display with ssd1306/ssd1309/sh1106-Controller}\par
37 {\cf20  *  first dev-version only for I2C-Connection}\par
38 {\cf20  *  at ATMega328P like Arduino Uno}\par
39 {\cf20  *}\par
40 {\cf20  *  at GRAPHICMODE lib needs SRAM for display}\par
41 {\cf20  *  DISPLAY-WIDTH * DISPLAY-HEIGHT + 2 bytes}\par
42 {\cf20  */}\par
43 \par
44 {\cf21 #ifndef OLED_H}\par
45 {\cf21 #define OLED_H}\par
46 \par
47 {\cf21 #ifdef __cplusplus}\par
48 {\cf17 extern} {\cf22 "C"} \{\par
49 {\cf21 #endif}\par
50     \par
51 {\cf21 #if (__GNUC__ * 100 + __GNUC_MINOR__) < 303}\par
52 {\cf21 # error "This library requires AVR-GCC 3.3 or later, update to newer AVR-GCC compiler !"}\par
53 {\cf21 #endif}\par
54 \par
55 {\cf21 #include <inttypes.h>}\par
56 {\cf21 #include <avr/pgmspace.h>}\par
57 \par
58     {\cf20 /* TODO: define bus */}\par
59 {\cf21 #define I2C  }{\cf20 // I2C or SPI  }\par
60     {\cf20 /* TODO: define displaycontroller */}\par
61 {\cf21 #define SH1106  }{\cf20 // or SSD1306, check datasheet of your display}\par
62     {\cf20 /* TODO: define displaymode */}\par
63 {\cf21 #define GRAPHICMODE  }{\cf20 // for text and graphic}\par
64     {\cf20 // TEXTMODE // for only text to display,}\par
65     {\cf20 /* TODO: define font */}\par
66 {\cf21 #define FONT  ssd1306oled_font  }{\cf20 // Refer font-name at font.h}\par
67     \par
68     {\cf20 // using 7-bit-adress for lcd-library}\par
69     {\cf20 // if you use your own library for twi check I2C-adress-handle}\par
70 {\cf21 #define OLED_I2C_ADR (0x3c)  }{\cf20 // 7 bit slave-adress without r/w-bit}\par
71     {\cf20 // e.g. 8 bit slave-adress:}\par
72     {\cf20 // 0x78 = adress 0x3C with cleared r/w-bit (write-mode)}\par
73 \par
74 \par
75 {\cf21 #ifdef I2C}\par
76 {\cf20 // # include "i2c.h"}\par
77 {\cf21 # include "twi.h"}\par
78 {\cf21 #elif defined SPI}\par
79 {\cf20 // If you want to use your other lib/function for SPI replace SPI-commands}\par
80 {\cf21 # define OLED_PORT PORTB}\par
81 {\cf21 # define OLED_DDR  DDRB}\par
82 {\cf21 # define RES_PIN  PB0}\par
83 {\cf21 # define DC_PIN   PB1}\par
84 {\cf21 # define CS_PIN   PB2}\par
85 {\cf21 #endif}\par
86 \par
87 {\cf21 #ifndef YES}\par
88 {\cf21 # define YES 1}\par
89 {\cf21 #endif}\par
90 \par
91 {\cf21 #define NORMALSIZE 1}\par
92 {\cf21 #define DOUBLESIZE 2}\par
93     \par
94 {\cf21 #define OLED_DISP_OFF 0xAE}\par
95 {\cf21 #define OLED_DISP_ON 0xAF}\par
96     \par
97 {\cf21 #define WHITE 0x01}\par
98 {\cf21 #define BLACK 0x00}\par
99     \par
100 {\cf21 #define DISPLAY_WIDTH 128}\par
101 {\cf21 #define DISPLAY_HEIGHT 64}\par
102 \par
103 {\cf20 // Transmit command or data to display}\par
104 {\cf18 void} oled_command(uint8_t cmd[], uint8_t size);\par
105 {\cf18 void} oled_data(uint8_t data[], uint16_t size);\par
106 {\cf18 void} oled_init(uint8_t dispAttr);\par
107 {\cf18 void} oled_home({\cf18 void});  {\cf20 // set cursor to 0,0}\par
108 {\cf18 void} oled_invert(uint8_t invert);  {\cf20 // invert display}\par
109 {\cf18 void} oled_sleep(uint8_t sleep);    {\cf20 // display goto sleep (power off)}\par
110 {\cf18 void} oled_set_contrast(uint8_t contrast);    {\cf20 // set contrast for display}\par
111 {\cf18 void} oled_puts({\cf17 const} {\cf18 char}* s);              {\cf20 // print string, \\n-terminated, from ram on screen (TEXTMODE)}\par
112                         {\cf20 // or buffer (GRAPHICMODE)}\par
113 {\cf18 void} oled_puts_p({\cf17 const} {\cf18 char}* progmem_s);  {\cf20 // print string from flash on screen (TEXTMODE)}\par
114 {\cf20 // or buffer (GRAPHICMODE)}\par
115 \par
116 {\cf18 void} oled_clrscr({\cf18 void});  {\cf20 // clear screen (and buffer at GRFAICMODE)}\par
117 {\cf18 void} oled_gotoxy(uint8_t x, uint8_t y);  {\cf20 // set curser at pos x, y. x means character,}\par
118 {\cf20 // y means line (page, refer lcd manual)}\par
119 {\cf18 void} oled_goto_xpix_y(uint8_t x, uint8_t y); {\cf20 // set curser at pos x, y. x means pixel,}\par
120 {\cf20 // y means line (page, refer lcd manual)}\par
121 {\cf18 void} oled_putc({\cf18 char} c);  {\cf20 // print character on screen at TEXTMODE}\par
122 {\cf20 // at GRAPHICMODE print character to buffer}\par
123 {\cf18 void} oled_charMode(uint8_t mode);  {\cf20 // set size of chars}\par
124 {\cf18 void} oled_flip(uint8_t flipping);  {\cf20 // flip display, }\par
125                     {\cf20 // flipping == 0: no flip (normal mode) }\par
126                         {\cf20 // == 1: flip horizontal & vertical}\par
127                         {\cf20 // == 2: flip(mirrored) vertical}\par
128                         {\cf20 // == 3: flip(mirrored) horizontal}\par
129 {\cf21 #if defined GRAPHICMODE}\par
130     uint8_t oled_drawPixel(uint8_t x, uint8_t y, uint8_t color);\par
131     uint8_t oled_drawLine(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, uint8_t color);\par
132     uint8_t oled_drawRect(uint8_t px1, uint8_t py1, uint8_t px2, uint8_t py2, uint8_t color);\par
133     uint8_t oled_fillRect(uint8_t px1, uint8_t py1, uint8_t px2, uint8_t py2, uint8_t color);\par
134     uint8_t oled_drawCircle(uint8_t center_x, uint8_t center_y, uint8_t radius, uint8_t color);\par
135     uint8_t oled_fillCircle(uint8_t center_x, uint8_t center_y, uint8_t radius, uint8_t color);\par
136     uint8_t oled_drawBitmap(uint8_t x, uint8_t y, {\cf17 const} uint8_t picture[], uint8_t width, uint8_t height, uint8_t color);\par
137     {\cf18 void} oled_display({\cf18 void});       {\cf20 // copy buffer to display RAM}\par
138     {\cf18 void} oled_clear_buffer({\cf18 void});  {\cf20 // clear display buffer}\par
139     uint8_t oled_check_buffer(uint8_t x, uint8_t y); {\cf20 // read a pixel value from the display buffer}\par
140     {\cf18 void} oled_display_block(uint8_t x, uint8_t line, uint8_t width); {\cf20 // display (part of) a display line}\par
141 {\cf21 #endif}\par
142 \par
143 {\cf21 #ifdef __cplusplus}\par
144 \}\par
145 {\cf21 #endif}\par
146 \par
147 {\cf21 #endif }{\cf20 /*  OLED_H  */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/twi/twi.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/twi/twi.h}
{\xe \v lib/twi/twi.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/io.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 
{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Definition of frequencies\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b F_CPU}\~ 16000000\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CPU frequency in Hz required TWI_BIT_RATE_REG. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b F_SCL}\~ 100000\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C/TWI bit rate. Must be greater than 31000. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_BIT_RATE_REG}\~ (({\b F_CPU}/{\b F_SCL} - 16) / 2)\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TWI bit rate register value. }{
}\par
}\par}
}
}{
\pard\plain \s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid Definition of ports and pins\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_PORT}\~ PORTC\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Port of TWI unit. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_SDA_PIN}\~ 4\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SDA pin of TWI unit. }{
}\par
}\par}
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_SCL_PIN}\~ 5\par
{
\pard\plain \s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SCL pin of TWI unit. }{
}\par
}\par}
}
}\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Other definitions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_WRITE}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode for writing to I2C/TWI device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_READ}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mode for reading from I2C/TWI device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_ACK}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ACK value for writing to I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b TWI_NACK}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NACK value for writing to I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b DDR}(_x)\~ (*(&_x - 1))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of Data Direction Register of port _x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b PIN}(_x)\~ (*(&_x - 2))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of input register of port _x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize TWI unit, enable internal pull-ups, and set SCL frequency. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_start} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start communication on I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_write} (uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send one byte to I2C/TWI Slave device. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_read} (uint8_t ack)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read one byte from I2C/TWI Slave device and acknowledge it by ACK or NACK. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b twi_stop} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates Stop condition on I2C/TWI bus. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b twi_test_address} (uint8_t adr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test presence of one I2C device on the bus. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
twi.h\par \pard\plain 
{\tc\tcl2 \v lib/twi/twi.h}
{\xe \v lib/twi/twi.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef TWI_H}\par
2 {\cf21 # define TWI_H}\par
3 \par
4 {\cf20 /***********************************************************************}\par
5 {\cf20  * }\par
6 {\cf20  * I2C/TWI library for AVR-GCC.}\par
7 {\cf20  * }\par
8 {\cf20  * ATmega328P (Arduino Uno), 16 MHz, PlatformIO}\par
9 {\cf20  *}\par
10 {\cf20  * Copyright (c) 2018 Tomas Fryza}\par
11 {\cf20  * Dept. of Radio Electronics, Brno University of Technology, Czechia}\par
12 {\cf20  * This work is licensed under the terms of the MIT license.}\par
13 {\cf20  *}\par
14 {\cf20  **********************************************************************/}\par
15 \par
35 {\cf20 /* Includes ----------------------------------------------------------*/}\par
36 {\cf21  #include <avr/io.h>}\par
37 \par
38 \par
39 {\cf20 /* Defines -----------------------------------------------------------*/}\par
43 {\cf21 #ifndef F_CPU}\par
44 {\cf21 # define F_CPU 16000000 }\par
45 {\cf21 #endif}\par
46 {\cf21 #define F_SCL 100000 }\par
47 {\cf21 #define TWI_BIT_RATE_REG ((F_CPU/F_SCL - 16) / 2) }\par
53 {\cf21 #define TWI_PORT PORTC }\par
54 {\cf21 #define TWI_SDA_PIN 4 }\par
55 {\cf21 #define TWI_SCL_PIN 5 }\par
61 {\cf21 #define TWI_WRITE 0 }\par
62 {\cf21 #define TWI_READ 1 }\par
63 {\cf21 #define TWI_ACK 0 }\par
64 {\cf21 #define TWI_NACK 1 }\par
65 {\cf21 #define DDR(_x) (*(&_x - 1)) }\par
66 {\cf21 #define PIN(_x) (*(&_x - 2)) }\par
69 {\cf20 /* Function prototypes -----------------------------------------------*/}\par
79 {\cf18 void} twi_init({\cf18 void});\par
80 \par
81 \par
86 {\cf18 void} twi_start({\cf18 void});\par
87 \par
88 \par
100 uint8_t twi_write(uint8_t data);\par
101 \par
102 \par
109 uint8_t twi_read(uint8_t ack);\par
110 \par
111 \par
116 {\cf18 void} twi_stop({\cf18 void});\par
117 \par
118 \par
126 uint8_t twi_test_address(uint8_t adr);\par
127 \par
128 \par
131 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/uart/uart.h File Reference\par \pard\plain 
{\tc\tcl2 \v lib/uart/uart.h}
{\xe \v lib/uart/uart.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/pgmspace.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BAUD_SELECT}(baudRate,  xtalCpu)\~ (((xtalCpu) + 8UL * (baudRate)) / (16UL * (baudRate)) -1UL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BAUD_SELECT_DOUBLE_SPEED}(baudRate,  xtalCpu)\~ ( ((((xtalCpu) + 4UL * (baudRate)) / (8UL * (baudRate)) -1UL)) | 0x8000)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART Baudrate Expression for ATmega double speed mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_RX_BUFFER_SIZE}\~ 32\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular receive buffer, must be power of 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_TX_BUFFER_SIZE}\~ 32\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the circular transmit buffer, must be power of 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_FRAME_ERROR}\~ 0x1000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Framing Error by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_OVERRUN_ERROR}\~ 0x0800\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overrun condition by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_PARITY_ERROR}\~ 0x0400\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parity Error by UART \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_BUFFER_OVERFLOW}\~ 0x0200\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
receive ringbuffer overflow }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b UART_NO_DATA}\~ 0x0100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no receive data available \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b uart_puts_P}(__s)\~ {\b uart_puts_p}(PSTR(__s))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to automatically put a string constant into program memory. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

#define {\b uart1_puts_P}(__s)\~ {\b uart1_puts_p}(PSTR(__s))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro to automatically put a string constant into program memory. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_init} (unsigned int baudrate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize UART and set baudrate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b uart_getc} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte from ringbuffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_putc} (unsigned char data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_puts} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_puts_p} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_init} (unsigned int baudrate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize USART1 (only available on selected ATmegas) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b uart1_getc} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get received byte of USART1 from ringbuffer. (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_putc} (unsigned char data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put byte to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_puts} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart1_puts_p} (const char *s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put string from program memory to ringbuffer for transmitting via USART1 (only available on selected ATmega) }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
uart.h\par \pard\plain 
{\tc\tcl2 \v lib/uart/uart.h}
{\xe \v lib/uart/uart.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef UART_H}\par
2 {\cf21 #define UART_H}\par
3 {\cf20 /************************************************************************}\par
4 {\cf20 Title:    Interrupt UART library with receive/transmit circular buffers}\par
5 {\cf20 Author:   Peter Fleury <pfleury@gmx.ch>  http://tinyurl.com/peterfleury}\par
6 {\cf20 File:     $Id: uart.h,v 1.13 2015/01/11 13:53:25 peter Exp $}\par
7 {\cf20 Software: AVR-GCC 4.x, AVR Libc 1.4 or higher}\par
8 {\cf20 Hardware: any AVR with built-in UART/USART}\par
9 {\cf20 Usage:    see Doxygen manual}\par
10 {\cf20 }\par
11 {\cf20 LICENSE:}\par
12 {\cf20     Copyright (C) 2015 Peter Fleury, GNU General Public License Version 3}\par
13 {\cf20 }\par
14 {\cf20     This program is free software; you can redistribute it and/or modify}\par
15 {\cf20     it under the terms of the GNU General Public License as published by}\par
16 {\cf20     the Free Software Foundation; either version 3 of the License, or}\par
17 {\cf20     any later version.}\par
18 {\cf20 }\par
19 {\cf20     This program is distributed in the hope that it will be useful,}\par
20 {\cf20     but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
21 {\cf20     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the}\par
22 {\cf20     GNU General Public License for more details.}\par
23 {\cf20     }\par
24 {\cf20 ************************************************************************/}\par
25 \par
50 {\cf21 #include <avr/pgmspace.h>}\par
51 \par
52 {\cf21 #if (__GNUC__ * 100 + __GNUC_MINOR__) < 405}\par
53 {\cf21 #error "This library requires AVR-GCC 4.5 or later, update to newer AVR-GCC compiler !"}\par
54 {\cf21 #endif}\par
55 \par
56 \par
60 {\cf20 /*}\par
61 {\cf20 ** constants and macros}\par
62 {\cf20 */}\par
63 \par
64 \par
69 {\cf21 #define UART_BAUD_SELECT(baudRate,xtalCpu)  (((xtalCpu) + 8UL * (baudRate)) / (16UL * (baudRate)) -1UL)}\par
70 \par
75 {\cf21 #define UART_BAUD_SELECT_DOUBLE_SPEED(baudRate,xtalCpu) ( ((((xtalCpu) + 4UL * (baudRate)) / (8UL * (baudRate)) -1UL)) | 0x8000)}\par
76 \par
82 {\cf21 #ifndef UART_RX_BUFFER_SIZE}\par
83 {\cf21 #define UART_RX_BUFFER_SIZE 32}\par
84 {\cf21 #endif}\par
85 \par
91 {\cf21 #ifndef UART_TX_BUFFER_SIZE}\par
92 {\cf21 #define UART_TX_BUFFER_SIZE 32}\par
93 {\cf21 #endif}\par
94 \par
95 {\cf20 /* test if the size of the circular buffers fits into SRAM */}\par
96 {\cf21 #if ( (UART_RX_BUFFER_SIZE+UART_TX_BUFFER_SIZE) >= (RAMEND-0x60 ) )}\par
97 {\cf21 #error "size of UART_RX_BUFFER_SIZE + UART_TX_BUFFER_SIZE larger than size of SRAM"}\par
98 {\cf21 #endif}\par
99 \par
100 {\cf20 /* }\par
101 {\cf20 ** high byte error return code of uart_getc()}\par
102 {\cf20 */}\par
103 {\cf21 #define UART_FRAME_ERROR      0x1000              }\par
104 {\cf21 #define UART_OVERRUN_ERROR    0x0800              }\par
105 {\cf21 #define UART_PARITY_ERROR     0x0400              }\par
106 {\cf21 #define UART_BUFFER_OVERFLOW  0x0200              }\par
107 {\cf21 #define UART_NO_DATA          0x0100              }\par
110 {\cf20 /*}\par
111 {\cf20 ** function prototypes}\par
112 {\cf20 */}\par
113 \par
119 {\cf17 extern} {\cf18 void} uart_init({\cf18 unsigned} {\cf18 int} baudrate);\par
120 \par
121 \par
146 {\cf17 extern} {\cf18 unsigned} {\cf18 int} uart_getc({\cf18 void});\par
147 \par
148 \par
154 {\cf17 extern} {\cf18 void} uart_putc({\cf18 unsigned} {\cf18 char} data);\par
155 \par
156 \par
167 {\cf17 extern} {\cf18 void} uart_puts({\cf17 const} {\cf18 char} *s );\par
168 \par
169 \par
181 {\cf17 extern} {\cf18 void} uart_puts_p({\cf17 const} {\cf18 char} *s );\par
182 \par
186 {\cf21 #define uart_puts_P(__s)       uart_puts_p(PSTR(__s))}\par
187 \par
188 \par
189 \par
191 {\cf17 extern} {\cf18 void} uart1_init({\cf18 unsigned} {\cf18 int} baudrate);\par
193 {\cf17 extern} {\cf18 unsigned} {\cf18 int} uart1_getc({\cf18 void});\par
195 {\cf17 extern} {\cf18 void} uart1_putc({\cf18 unsigned} {\cf18 char} data);\par
197 {\cf17 extern} {\cf18 void} uart1_puts({\cf17 const} {\cf18 char} *s );\par
199 {\cf17 extern} {\cf18 void} uart1_puts_p({\cf17 const} {\cf18 char} *s );\par
201 {\cf21 #define uart1_puts_P(__s)       uart1_puts_p(PSTR(__s))}\par
202 \par
206 {\cf21 #endif }{\cf20 // UART_H }\par
207 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
